header(ngModel="ace")
  h1.stylish-letters - angular-clazz -
  .ui.grid
    .two.wide.column &nbsp;
    .twelve.wide.column
      .ui.three.items
        .item
          .image.small
            img(src="images/angular.png")
            a.like.red.ui.corner.label: i.like.icon
          .content
            .name.stylish-letters &lt;&gt;-ular
            p.description
              | Every Cowboy starts with a tame beast. As to learn. Once he can control a single entity, he watches. And watches. Silently. Learning.
              | Unless you're a geek, nothing might happen.
              | But then, patterns emerge. Behaviours. Archetypes.
              | The mind abstracting, controlling the flow of force and direction, working.
              | The herd will follow.
              | Angular gives the geek nice tools to control their entities.
              | What you will find here, is nothing but yet another tool -> enhancing angular.
              h3
                | So you're tired of your tame beast. You'd like to be a uber-gangster, sheriff, what-the-hack?!&nbsp;
                em Come and enhance your caffeinated knowledge, lend 'em fellow g33k some Cl4zz!!
        .item
          .image
            img(src="images/coffeescript.png")
            a.like.black.ui.corner.label: i.like.icon
          .content
            .name.stylish-letters Caffeine
            p.description
              | So you do code meaningful whitspace, huh? Your eyes are not blinking on flamewar comments? You're steadfast!
              | You are looking ahead to harmony, thinking ... bring it on. And silently you shed a tear as to good auld coffee ...
              | Anyway! You want
              em Cl4zz!
              | Neither are you satisfied by how the dark side tries to force a ~way~ on you, unromatically standardized.
              | You will not be satisfied by scope-inheritance, replacing your decent functional inheritance.
              | In fact, you plain want to use your beautiful class-based functional inhertance lib.
              h3
                | You want to build standardized behaviours in extendable base classes,
                | instead of crippling your own creative logic into super-simplified standards.&nbsp;
                em Let there be functional inheritance. For r34l!
        .item
          .image
            img(src="images/joehannes.png")
            a.like.blue.ui.corner.label(href="https://github.com/joehannes/angular-clazz/tree/master" target="_blank"): i.star.icon
            .ui.pull-up-margin.blue.ribbon.label: a(href="https://github.com/joehannes/angular-clazz/fork" target="_blank") Hand me a fork!
          .content
            .name.stylish-letters Clazz
            p.description
              | Imagine you code a class which is automatically a service or controller.
              | Extending the plugins base classes, you write a tailored to your needs foundation.
              | You will use your structured components-like system in every project.
              | * Things like API integration will be down to setting a global angular.constant containing the URL ...
              | * You get rid of those nasty angular html4-event-hacks in the view, sticking them back into your controller!
              | * You don't even care about minification issues anymore, injection is a string parametrized method
              | * The sky's the limit now, extend away, oh, did I say it allows for semi-intelligent-Mixins?
              h3
                | Star it, Fork it, if you want to share the happiness!
                em  Play around, if you do Angular & CS  & ðŸ’— OO, then give it a shot!
    .two.wide.column &nbsp;
main
    section.intro.ui.grid
        .two.wide.column &nbsp;
        .twelve.wide.column
            h1.stylish-letters - prelude -
            article(ng-model="item.injectable" ui-ace="{ useWrapMode: true, showGutter: true, theme: 'twilight', mode: 'coffee', onLoad: aceLoaded }" readonly="true" ng-repeat-start="item in prelude")
            p.explanation(ng-repeat-end ng-bind-html="item.explanation")
        .two.wide.column &nbsp;
    section.action.ui.grid
        .two.wide.column &nbsp;
        .twelve.wide.column
            h1.stylish-letters - action -
            p.explanation(ng-repeat-start="item in action" ng-bind-html="item.explanation")
            article(ng-model="item.injectable" ui-ace="{ useWrapMode: true, showGutter: true, theme: 'twilight', mode: 'coffee', onLoad: aceLoaded }" readonly="true" ng-repeat-end)
        .two.wide.column &nbsp;
